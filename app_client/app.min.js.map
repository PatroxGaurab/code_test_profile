{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","e","current","a","params","url","Object","keys","map","k","encodeURIComponent","join","query","angular","module","homeCtrl","$scope","$http","getCommitData","IN","API","Profile","fields","result","$apply","jsondata","values","error","err","profileCtrl","$routeParams","meanData","Upload","vm","this","user","getProfile","success","data","console","log","profileNameUpdate","updateProfile","updateParam","name","alert","JSON","stringify","profileHeadlineUpdate","headline","profileLocationUpdate","location","profileExperienceUpdate","experience","positions","addNewExperience","newItemNo","length","push","id","removeExperience","lastItem","splice","uploadPic","file","uploadImage","$inject","loginCtrl","credentials","email","password","onSubmit","login","then","registerCtrl","register","$window","saveToken","token","localStorage","getToken","payload","split","atob","parse","exp","Date","now","currentUser","post","logout","removeItem","service","routeParams","get","sso","sig","headers","Authorization","profileParams","upload","response","$timeout","evt","navigationCtrl","navigation","restrict","directive"],"mappings":"CAAA,WAIE,QAASA,GAAQC,EAAgBC,GAC/BD,EACGE,KAAK,KACJC,YAAa,sBACbC,WAAY,WACZC,aAAc,OAEfH,KAAK,aACJC,YAAa,oCACbC,WAAY,eACZC,aAAc,OAEfH,KAAK,UACJC,YAAa,8BACbC,WAAY,YACZC,aAAc,OAEfH,KAAK,YACJC,YAAa,6BACbC,WAAY,cACZC,aAAc,OAEfC,WAAWC,WAAY,MAG1BN,EAAkBO,WAAU,GAG9B,QAASC,GAAIC,EAAYC,EAAWC,GAClCF,EAAWG,IAAI,oBAAqB,SAASC,EAAOC,EAAWC,GACpC,aAArBL,EAAUM,QAA0BL,EAAeM,cACrDP,EAAUM,KAAK,OAGpBP,EAAWG,IAAI,sBAAuB,SAAUM,EAAGC,GACrDC,EAAED,EAAQE,OACVC,IAAMC,OAAOC,KAAKJ,GAAGK,IAAI,SAASC,GAC9B,MAAOC,oBAAmBD,GAAK,IAAMC,mBAAmBP,EAAEM,MAC3DE,KAAK,KACDnB,EAAWoB,MAAQP,MAzCzBQ,QAAQC,OAAO,WAAY,UAAU,iBA8CrCD,QACGC,OAAO,WACPjC,QAAQ,iBAAkB,oBAAqBA,IAC/CU,KAAK,aAAc,YAAa,iBAAkBA,OAIvD,WAOI,QAASwB,GAAUC,EAAQC,GAC1BD,EAAOE,cAAgB,WAC1BC,GAAGC,IAAIC,QAAQ,MAAMC,QACX,KAAM,YAAa,WAAY,aACzB,qBAAsBC,OAAO,SAASA,GAElDP,EAAOQ,OAAO,WACVR,EAAOS,SAAWF,EAAOG,OAAO,OAErCC,MAAM,SAASC,GACdZ,EAAOQ,OAAO,WACVR,EAAOW,MAAQC,OAhBvBf,QACGC,OAAO,WACP5B,WAAW,YAChB,SAAS,QAAS6B,OAqBlB,WAOE,QAASc,GAAYpC,EAAWqC,EAAcC,EAAUf,EAAQC,EAAOe,GACrE,GAAIC,GAAKC,IAETD,GAAGE,QAEHJ,EAASK,WAAWN,GACjBO,QAAQ,SAASC,GAChBL,EAAGE,KAAOG,IAOXX,MAAM,SAAU1B,GACfsC,QAAQC,IAAIvC,KAGfe,EAAOE,cAAgB,WAC1BC,GAAGC,IAAIC,QAAQ,MAAMC,QACX,KAAM,YAAa,WAAY,aACzB,mBAAoB,WAAY,UAAW,WAAY,cAAeC,OAAO,SAASA,GAElGP,EAAOQ,OAAO,WACVR,EAAOS,SAAWF,EAAOG,OAAO,OAErCC,MAAM,SAASC,GACdZ,EAAOQ,OAAO,WACVR,EAAOW,MAAQC,OAKpBZ,EAAOyB,kBAAoB,WAC1BV,EAASW,eAAgBC,aAAiBC,KAAOX,EAAGE,KAAKS,QACtDP,QAAQ,SAASC,GAEvBO,MAAMC,KAAKC,UAAUT,MAEfX,MAAM,SAAU1B,GACtBsC,QAAQC,IAAIvC,MAKVe,EAAOgC,sBAAwB,WAC9BjB,EAASW,eAAgBC,aAAiBM,SAAWjC,EAAOS,SAASwB,YAClEZ,QAAQ,SAASC,GAEvBO,MAAMC,KAAKC,UAAUT,MAEfX,MAAM,SAAU1B,GACtBsC,QAAQC,IAAIvC,MAKVe,EAAOkC,sBAAwB,WAC9BnB,EAASW,eAAgBC,aAAiBQ,SAAWnC,EAAOS,SAAS0B,SAASP,QAC3EP,QAAQ,SAASC,GAEvBO,MAAMC,KAAKC,UAAUT,MAEfX,MAAM,SAAU1B,GACtBsC,QAAQC,IAAIvC,MAKVe,EAAOoC,wBAA0B,WAChCrB,EAASW,eAAgBC,aAAiBU,WAAarC,EAAOS,SAAS6B,UAAU5B,UAC9EW,QAAQ,SAASC,GAEvBO,MAAMC,KAAKC,UAAUT,MAEfX,MAAM,SAAU1B,GACtBsC,QAAQC,IAAIvC,MAKZe,EAAOuC,iBAAmB,WACxB,GAAIC,GAAYxC,EAAOS,SAAS6B,UAAU5B,OAAO+B,OAAO,CACxDzC,GAAOS,SAAS6B,UAAU5B,OAAOgC,MAAMC,GAAKH,KAI9CxC,EAAO4C,iBAAmB,WACxB,GAAIC,GAAW7C,EAAOS,SAAS6B,UAAU5B,OAAO+B,OAAO,CACvDzC,GAAOS,SAAS6B,UAAU5B,OAAOoC,OAAOD,IAGzC7C,EAAO+C,UAAY,SAASC,GAC3BjC,EAASkC,YAAYD,GAClB3B,QAAQ,SAASC,GACvBO,MAAMC,KAAKC,UAAUT,MAGfX,MAAM,SAAU1B,GACtBsC,QAAQC,IAAIvC,MAzGVY,QAAQC,OAAO,WACjBD,QACGC,OAAO,WACP5B,WAAW,cAAe2C,GAE7BA,EAAYqC,SAAW,YAAY,eAAgB,WAAY,SAAU,QAAS,aA8GpF,WAOE,QAASC,GAAU1E,EAAWC,GAC5B,GAAIuC,GAAKC,IAETD,GAAGmC,aACDC,MAAQ,GACRC,SAAW,IAGbrC,EAAGsC,SAAW,WACZ7E,EACG8E,MAAMvC,EAAGmC,aACTzC,MAAM,SAASC,GACdiB,MAAMjB,KAEP6C,KAAK,WACJhF,EAAUM,KAAK,cApBvBc,QACCC,OAAO,WACP5B,WAAW,YAAaiF,GAEzBA,EAAUD,SAAW,YAAa,qBAwBpC,WAOE,QAASQ,GAAajF,EAAWC,GAC/B,GAAIuC,GAAKC,IAETD,GAAGmC,aACDxB,KAAO,GACPyB,MAAQ,GACRC,SAAW,IAGbrC,EAAGsC,SAAW,WACZhC,QAAQC,IAAI,2BACZ9C,EACGiF,SAAS1C,EAAGmC,aACZzC,MAAM,SAASC,GACdiB,MAAMjB,KAEP6C,KAAK,WACJhF,EAAUM,KAAK,cAtBvBc,QACGC,OAAO,WACP5B,WAAW,eAAgBwF,GAE9BA,EAAaR,SAAW,YAAa,qBAyBvC,WAOE,QAASxE,GAAgBuB,EAAO2D,GAE9B,GAAIC,GAAY,SAAUC,GACxBF,EAAQG,aAAa,cAAgBD,GAGnCE,EAAW,WACb,MAAOJ,GAAQG,aAAa,eAG1B/E,EAAa,WACf,GACIiF,GADAH,EAAQE,GAGZ,SAAGF,IACDG,EAAUH,EAAMI,MAAM,KAAK,GAC3BD,EAAUL,EAAQO,KAAKF,GACvBA,EAAUnC,KAAKsC,MAAMH,GAEdA,EAAQI,IAAMC,KAAKC,MAAQ,MAMlCC,EAAc,WAChB,GAAGxF,IAAa,CACd,GAAI8E,GAAQE,IACRC,EAAUH,EAAMI,MAAM,KAAK,EAG/B,OAFAD,GAAUL,EAAQO,KAAKF,GACvBA,EAAUnC,KAAKsC,MAAMH,IAEnBZ,MAAQY,EAAQZ,MAChBzB,KAAOqC,EAAQrC,OAqBrB,OAhBA+B,UAAW,SAASxC,GAClB,MAAOlB,GAAMwE,KAAK,gBAAiBtD,GAAME,QAAQ,SAASC,GACxDuC,EAAUvC,EAAKwC,UAInBN,MAAQ,SAASrC,GACf,MAAOlB,GAAMwE,KAAK,aAActD,GAAME,QAAQ,SAASC,GACrDuC,EAAUvC,EAAKwC,UAInBY,OAAS,WACPd,EAAQG,aAAaY,WAAW,gBAIhCH,YAAcA,EACdX,UAAYA,EACZG,SAAWA,EACXhF,WAAaA,EACb2E,SAAWA,SACXH,MAAQA,MACRkB,OAASA,QAlEb7E,QACGC,OAAO,WACP8E,QAAQ,iBAAkBlG,GAE7BA,EAAewE,SAAW,QAAS,cAoErC,WAOE,QAASnC,GAAUd,EAAOvB,EAAgBsC,GAExC,GAAII,GAAa,SAAUyD,GACzB,MAAO5E,GAAM6E,IAAI,oBAAoBD,EAAYE,IAAI,QAAQF,EAAYG,KACvEC,SACEC,cAAe,UAAWxG,EAAesF,eAK3CtC,EAAgB,SAAUyD,GAC5B,MAAOlF,GAAMwE,KAAK,eAAgBU,GAChCF,SACEC,cAAe,UAAWxG,EAAesF,eAK3Cf,EAAc,SAAUD,GAC1BA,EAAKoC,OAASpE,EAAOoE,QACnB/F,IAAK,wBACLiC,MAAO0B,KAAMA,GACbiC,SACEC,cAAe,UAAWxG,EAAesF,cAI9ChB,EAAKoC,OAAO3B,KAAK,SAAU4B,GACzBC,SAAS,eAGR,SAAUD,KAGV,SAAUE,MAKd,QACEnE,WAAaA,EACbM,cAAgBA,EAChBuB,YAAcA,GA/ClBpD,QACGC,OAAO,WACP8E,QAAQ,WAAY7D,GAEvBA,EAASmC,SAAW,QAAS,iBAAiB,aAiDhD,WAOE,QAASsC,GAAe/G,EAAWC,GACjC,GAAIuC,GAAKC,IAETD,GAAGjC,WAAaN,EAAeM,aAE/BiC,EAAGuD,YAAc9F,EAAe8F,cAVlC3E,QACGC,OAAO,WACP5B,WAAW,iBAAkBsH,GAEhCA,EAAetC,SAAW,YAAY,qBAWxC,WAME,QAASuC,KACP,OACEC,SAAU,KACVzH,YAAa,yDACbC,WAAY,2BARhB2B,QACGC,OAAO,WACP6F,UAAU,aAAcF","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute','ngFileUpload']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n   $rootScope.$on(\"$routeChangeSuccess\", function (e, current) {\n\ta=current.params;\n\turl = Object.keys(a).map(function(k) {\n\t    return encodeURIComponent(k) + '=' + encodeURIComponent(a[k])\n\t}).join('&')\n        $rootScope.query = url;\n    });\n\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', [\n'$scope','$http', homeCtrl]);\n\n    function homeCtrl ($scope, $http) {\n\t    $scope.getCommitData = function() {\n\t\tIN.API.Profile(\"me\").fields(\n\t\t        [ \"id\", \"firstName\", \"lastName\", \"pictureUrl\",\n\t\t                \"publicProfileUrl\" ]).result(function(result) {\n\t\t    //set the model\n\t\t    $scope.$apply(function() {\n\t\t        $scope.jsondata = result.values[0];\n\t\t    });\n\t\t}).error(function(err) {\n\t\t    $scope.$apply(function() {\n\t\t        $scope.error = err;\n\t\t    });\n\t\t});\n\t    };\n    }\n\n})();\n\n(function() {\n    angular.module('meanApp');\n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location','$routeParams', 'meanData', '$scope', '$http', 'Upload'];\n  function profileCtrl($location, $routeParams, meanData, $scope, $http, Upload) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile($routeParams)\n      .success(function(data) {\n        vm.user = data;\n\t//var json_res=data;\n\t//alert();\n\t//var redirect_to=data.redirect_to;\n\t//alert(JSON.stringify(data));\t\n\t//window.location = redirect_to;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n\n\t    $scope.getCommitData = function() {\n\t\tIN.API.Profile(\"me\").fields(\n\t\t        [ \"id\", \"firstName\", \"lastName\", \"pictureUrl\",\n\t\t                \"publicProfileUrl\", \"headline\", \"summary\", \"location\", \"positions\" ]).result(function(result) {\n\t\t    //set the model\n\t\t    $scope.$apply(function() {\n\t\t        $scope.jsondata = result.values[0];\n\t\t    });\n\t\t}).error(function(err) {\n\t\t    $scope.$apply(function() {\n\t\t        $scope.error = err;\n\t\t    });\n\t\t});\n\t    };\n\n\t    $scope.profileNameUpdate = function() {\n\t\t    meanData.updateProfile({ \"updateParam\" : {\"name\":vm.user.name} })\n\t\t      .success(function(data) {\n\t\t\t//vm.user = data;\n\t\t\talert(JSON.stringify(data));\n\t\t      })\n\t\t      .error(function (e) {\n\t\t\tconsole.log(e);\n\t\t      });\n\n\t    };\n\n\t    $scope.profileHeadlineUpdate = function() {\n\t\t    meanData.updateProfile({ \"updateParam\" : {\"headline\":$scope.jsondata.headline} })\n\t\t      .success(function(data) {\n\t\t\t//vm.user = data;\n\t\t\talert(JSON.stringify(data));\n\t\t      })\n\t\t      .error(function (e) {\n\t\t\tconsole.log(e);\n\t\t      });\n\n\t    };\n\n\t    $scope.profileLocationUpdate = function() {\n\t\t    meanData.updateProfile({ \"updateParam\" : {\"location\":$scope.jsondata.location.name} })\n\t\t      .success(function(data) {\n\t\t\t//vm.user = data;\n\t\t\talert(JSON.stringify(data));\n\t\t      })\n\t\t      .error(function (e) {\n\t\t\tconsole.log(e);\n\t\t      });\n\n\t    };\n\n\t    $scope.profileExperienceUpdate = function() {\n\t\t    meanData.updateProfile({ \"updateParam\" : {\"experience\":$scope.jsondata.positions.values} })\n\t\t      .success(function(data) {\n\t\t\t//vm.user = data;\n\t\t\talert(JSON.stringify(data));\n\t\t      })\n\t\t      .error(function (e) {\n\t\t\tconsole.log(e);\n\t\t      });\n\n\t    };\n\n\t  $scope.addNewExperience = function() {\n\t    var newItemNo = $scope.jsondata.positions.values.length+1;\n\t    $scope.jsondata.positions.values.push({'id':newItemNo});\n\t//alert(newItemNo);\n\t  };\n\n\t  $scope.removeExperience = function() {\n\t    var lastItem = $scope.jsondata.positions.values.length-1;\n\t    $scope.jsondata.positions.values.splice(lastItem);\n\t  };\n\n    $scope.uploadPic = function(file) {\n\t    meanData.uploadImage(file)\n\t      .success(function(data) {\n\t\talert(JSON.stringify(data));\t\n\t\t//window.location = redirect_to;\n\t      })\n\t      .error(function (e) {\n\t\tconsole.log(e);\n\t      });\n\n    };\n\n\n  }\n\n})();\n\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication','Upload'];\n  function meanData ($http, authentication, Upload) {\n\n    var getProfile = function (routeParams) {\n      return $http.get('/api/profile?sso='+routeParams.sso+'&sig='+routeParams.sig, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    var updateProfile = function (profileParams) {\n      return $http.post('/api/profile', profileParams, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    var uploadImage = function (file) {\n      file.upload = Upload.upload({\n        url: 'api/upload/profilepic',\n        data: {file: file},\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n\n\t    file.upload.then(function (response) {\n\t      $timeout(function () {\n\t\t//file.result = response.data;\n\t      });\n\t    }, function (response) {\n\t      //if (response.status > 0)\n\t\t//$scope.errorMsg = response.status + ': ' + response.data;\n\t    }, function (evt) {\n\t      // Math.min is to fix IE which reports 200% sometimes\n\t      //file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t    });\n    };\n    return {\n      getProfile : getProfile,\n      updateProfile : updateProfile,\n      uploadImage : uploadImage\n    };\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"],"sourceRoot":"/source/"}